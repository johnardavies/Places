#This code checks whether a TTWA has a Nationalpark that falls (partly or wholly) in its boundaries

#Reads in the parks data
natpark<-readOGR("filepath\\Culture project\\TTWA", "NPARK_DEC_2015_GB_BGC")

#sets the projection
natpark<-spTransform(natpark, CRS("+proj=longlat +datum=WGS84"))

#Reads in the travel to work areas, this is the 2001 geography
ttwa<-readOGR("filepath\Mapping\\TTWA 2001", "TTWA_2001_UK_BFE")

#sets the projection
ttwa<-spTransform(ttwa, CRS("+proj=longlat +datum=WGS84"))

#Generates a data frame that for each TTWA indicates if it falls within a national park
inuk<-over(ttwa,natpark, returnlist=TRUE)

#Generates a flag if a ttwa falls within a national park
inuk$npark<-ifelse(is.na(inuk$NPARK15NM)==TRUE,0,1)

#binds the results to the ttwas
ttwa@data<-cbind(ttwa@data, inuk$npark)

parks<-ttwa@data[, c("TTWA01CDO","inuk$npark")]

#Renames the parks data
colnames(parks)<-c("TTWA01CDO","natpark")

#Recode the parks variable to remove the NAs
parksnatpark<-ifelse(parks$natpark=='NA',0,parks$natpark)

#Makes sure the coding is numeric for the TTWAs otherwise some of the places don't match
parks$TTWA01CDO<-as.numeric(parks$TTWA01CDO)

#Merge with comb
comb<-merge(comb,parks, by=c("TTWA01CDO"), all.x=TRUE )
